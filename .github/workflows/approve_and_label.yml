name: approve_and_label
on: 
  pull_request:
    types: [opened, reopened]
    

jobs:
  parse_dependabot_pr:
    runs-on: ubuntu-latest
    name: Parse Dependabot PR title
    outputs:
      dependencyName: ${{ steps.parse_dependabot_pr.outputs.dependencyName }}
      updateType: ${{ steps.parse_dependabot_pr.outputs.updateType }}
    if: |
      github.actor == 'dependabot[bot]' &&
      github.event_name == 'pull_request'
    steps:
      - name: Parse Dependabot PR title
        id: parse_dependabot_pr
        uses: ./.github/actions/parse_dependabot_pr
        with:
          pr_title: ${{ github.event.pull_request.title }}
  approve_and_label:
    runs-on: ubuntu-latest
    needs: parse_dependabot_pr
    name: Approve and label
    if: |
        github.actor == 'dependabot[bot]' &&
        github.event_name == 'pull_request' &&
        (startsWith(needs.parse_dependabot_pr.dependencyName, 'Endjin') ||
        startsWith(needs.parse_dependabot_pr.dependencyName, 'Corvus') ||
        startsWith(needs.parse_dependabot_pr.dependencyName, 'Menes') ||
        startsWith(needs.parse_dependabot_pr.dependencyName, 'Marain')) &&
        (needs.parse_dependabot_pr.updateType == 'minor' || needs.parse_dependabot_pr.updateType == 'patch')
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
      - name: Approve pull request
        uses: andrewmusgrave/automatic-pull-request-review@0.0.2
        with:
          repo-token: '${{ steps.generate_token.outputs.token }}'
          event: APPROVE
          body: 'Thank you dependabot ðŸŽŠ'
      - name: 'Label with "autosquash"'
        env: 
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        uses: actions/github-script@v2
        with:
          github-token: '${{ steps.generate_token.outputs.token }}'
          script: |
            await github.issues.addLabels({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              issue_number: context.payload.pull_request.number,
              labels: ['autosquash']
            })
